#! /usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')

require 'bundler'
require 'lionel_richie'
Bundler.require(:development)

commands = []

puts "Authorize for Trello?"
if gets.strip =~ /\Ay/i
  Launchy.open "https://trello.com/1/appKey/generate"
  puts "Enter your trello key:"
  trello_key = gets.strip
  commands << "export TRELLO_KEY=#{trello_key}"

  Launchy.open "https://trello.com/1/authorize?key=#{trello_key.strip}&name=LionelRichie&response_type=token&scope=read,write,account&expiration=never"
  puts "Enter your trello token"
  trello_token = gets.strip
  commands << "export TRELLO_TOKEN=#{trello_token}"
end

# Google Auth
puts "Authorize for Google?"
if gets.strip =~ /\Ay/i
    client = OAuth2::Client.new(
        ENV['GOOGLE_CLIENT_ID'],
        ENV['GOOGLE_CLIENT_SECRET'],
        :site => "https://accounts.google.com",
        :token_url => "/o/oauth2/token",
        :authorize_url => "/o/oauth2/auth")

  if !(refresh_token = ENV['GOOGLE_REFRESH_TOKEN'])
    google_auth_token = OAuth2::AccessToken.from_hash(client,
      {:refresh_token => refresh_token, :expires_at => 7200})
    google_auth_token = google_auth_token.refresh!
  else
    auth_url = client.auth_code.authorize_url(
        :redirect_uri => "urn:ietf:wg:oauth:2.0:oob",
        :scope =>
            "https://docs.google.com/feeds/ " +
            "https://docs.googleusercontent.com/ " +
            "https://spreadsheets.google.com/feeds/")

    # Redirect the user to auth_url and get authorization code from redirect URL.
    Launchy.open auth_url

    puts "Enter your google key:"
    authorization_code = gets.strip
    google_auth_token = client.auth_code.get_token(
        authorization_code,
        :redirect_uri => "urn:ietf:wg:oauth:2.0:oob")
  end

  commands << "export GOOGLE_TOKEN=#{google_auth_token.token}"
  commands << "export GOOGLE_REFRESH_TOKEN=#{google_auth_token.refresh_token}"
end

puts "Run the following:\n"
puts commands
